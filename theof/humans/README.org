#+TITLE:
#+AUTHOR:
#+EMAIL:
#+KEYWORDS:
#+DESCRIPTION:
#+TAGS:
#+LANGUAGE: en
#+OPTIONS: toc:nil ':t H:5
#+STARTUP: hidestars overview
#+LaTeX_CLASS: scrartcl
#+LaTeX_CLASS_OPTIONS: [a4paper,11pt]

* statistics
** temporal distribution
We plot some temporal distributions:
#+BEGIN_SRC sh
  echo "year articles cand wd wd+bl found true prec"
  for year in $(seq 1987 2007); do
      echo $year \
	   $(grep ^$year ../articles.tsv | cut -d' ' -f2) \
	   $(zcat ../theof_${year}.tsv.gz | wc -l) \
	   $(cat ../theof_${year}_wd.tsv | wc -l) \
	   $(cat ../theof_${year}_wda_bl.tsv | wc -l) \
	   $(../org.py -y ../README.org | grep ${year} | wc -l) \
           $(../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -y -c -b ../README.org | grep ${year} | awk -F'\t' '{if ($2 == "D" || $3 == "True") print;}' | wc -l)
  done
#+END_SRC


#+CAPTION: The temporal distribution of the number of candidate phrases (cand), after matching against  Wikidata (wd) and a blacklist (wd+bl), and after manual inspection (true). The last column shows the precision.
#+NAME: temporal-distribution
|   year | articles |     cand |    wd | wd+bl | found | true | prec |      |
|--------+----------+----------+-------+-------+-------+------+------+------|
|   1987 |   106104 |   641432 |  5236 |   131 |   129 |   95 | 73.6 | 0.90 |
|   1988 |   104541 |   637132 |  5074 |   143 |   141 |   88 | 62.4 | 0.84 |
|   1989 |   102818 |   625894 |  4922 |   151 |   148 |  104 | 70.3 | 1.01 |
|   1990 |    98812 |   614164 |  4890 |   142 |   140 |  105 | 75.0 | 1.06 |
|   1991 |    85135 |   512582 |  4189 |   154 |   154 |  103 | 66.9 | 1.21 |
|   1992 |    82685 |   493808 |  4442 |   152 |   152 |  103 | 67.8 | 1.25 |
|   1993 |    79200 |   480883 |  4338 |   167 |   167 |  121 | 72.5 | 1.53 |
|   1994 |    74925 |   464278 |  4038 |   164 |   164 |  112 | 68.3 | 1.49 |
|   1995 |    85392 |   500404 |  4636 |   162 |   162 |  124 | 76.5 | 1.45 |
|   1996 |    79077 |   497688 |  4250 |   186 |   186 |  133 | 71.5 | 1.68 |
|   1997 |    85396 |   515759 |  4561 |   173 |   173 |  134 | 77.5 | 1.57 |
|   1998 |    89163 |   571010 |  5333 |   243 |   243 |  180 | 74.1 | 2.02 |
|   1999 |    91074 |   585464 |  5375 |   189 |   189 |  136 | 72.0 | 1.49 |
|   2000 |    94258 |   602240 |  4750 |   231 |   231 |  172 | 74.5 | 1.82 |
|   2001 |    96282 |   587644 |  4512 |   210 |   209 |  163 | 78.0 | 1.69 |
|   2002 |    97258 |   597289 |  4992 |   231 |   229 |  177 | 77.3 | 1.82 |
|   2003 |    94235 |   590890 |  4749 |   219 |   216 |  165 | 76.4 | 1.75 |
|   2004 |    91362 |   571894 |  4702 |   192 |   191 |  153 | 80.1 | 1.67 |
|   2005 |    90004 |   562027 |  4680 |   208 |   207 |  162 | 78.3 | 1.80 |
|   2006 |    87052 |   561203 |  4786 |   221 |   221 |  169 | 76.5 | 1.94 |
|   2007 |    39953 |   260778 |  2276 |   101 |   101 |   76 | 75.2 | 1.90 |
|--------+----------+----------+-------+-------+-------+------+------+------|
|  *sum* |  1854726 | 11474463 | 96731 |  3770 |  3753 | 2775 | 73.9 | 1.50 |
| *mean* |    88320 |   546403 |  4606 |   180 |   179 |  132 | 73.7 | 1.49 |
#+TBLFM: $8=($-1/$-2)*100;%2.1f::$9=($-2/$2)*1000;%2.2f::@23$2=vsum(@I..@II)::@23$3=vsum(@I..@II)::@23$4=vsum(@I..@II)::@23$5=vsum(@I..@II)::@23$6=vsum(@I..@II)::@23$7=vsum(@I..@II)::@24$2=vmean(@I..@II);%2.0f::@24$3=vmean(@I..@II);%2.0f::@24$4=vmean(@I..@II);%2.0f::@24$5=vmean(@I..@II);%2.0f::@24$6=vmean(@I..@II);%2.0f::@24$7=vmean(@I..@II);%2.0f


#+begin_src gnuplot :var data=temporal-distribution :file nyt_vossantos_over_time.svg :results silent
reset
set datafile separator "\t"

set xlabel "year"
set ylabel "frequency"
set grid linetype 1 linecolor 0
set yrange [0:*]
set y2range [0:100]
set y2label 'precision'
set y2tics
set key top left
set style fill solid 1

set term svg enhanced size 800,600 dynamic fname "Palatino Linotype, Book Antiqua, Palatino, FreeSerif, serif" fsize 16
#set out "nyt_vossantos_over_time.svg"
plot data using 1:6 with linespoints pt 6 ps 7 lc "black" title 'candidates',\
     data using 1:7 with linespoints pt 7 ps 7 lc "black"  title 'Vossantos',\
     data using 1:8 with lines lc "black" title 'precision' axes x1y2

# data using 1:2 with linespoints pt 7 axes x1y2 title 'cand',\
#     data using 1:3 with linespoints pt 7 axes x1y2 title 'wd',\

set term png enhanced size 2835,2126 font "Arial,40" lw 4
# set term png enhanced size 800,600 font "Arial,16" lw  2
set out "nyt_vossantos_over_time.png"
replot

# adapted for arxiv paper
set key bottom right
set term pdf enhanced lw 2
set out "nyt_vossantos_over_time.pdf"
plot data using 1:6 with linespoints pt 6 ps 1 title 'candidates',\
     data using 1:7 with linespoints pt 7 ps 1 title 'Vossantos',\
     data using 1:8 with lines title 'precision' axes x1y2


# ---- relative values

set key top left
set term svg enhanced size 800,600 dynamic fname "Palatino Linotype, Book Antiqua, Palatino, FreeSerif, serif" fsize 16
set out "nyt_vossantos_over_time_rel.svg"
set ylabel "frequency (per mille)"
set format y "%2.1f"

plot data using 1:($6/$2*1000) with linespoints pt 6 ps 7 lc "black" title 'candidates',\
     data using 1:($7/$2*1000) with linespoints pt 7 ps 7 lc "black"  title 'Vossantos',\
     data using 1:8 with lines lc "black" title 'precision' axes x1y2


set term png enhanced size 2835,2126 font "Arial,40" lw 4
# set term png enhanced size 800,600 font "Arial,16" lw  2
set out "nyt_vossantos_over_time_rel.png"
replot

# adapted for arxiv paper
set key bottom right
set term pdf enhanced lw 2
set out "nyt_vossantos_over_time_rel.pdf"
plot data using 1:($6/$2*1000) with linespoints pt 6 ps 1 title 'candidates',\
     data using 1:($7/$2*1000) with linespoints pt 7 ps 1 title 'Vossantos',\
     data using 1:8 with lines title 'precision' axes x1y2

#+end_src

Absolute frequency:
[[nyt_vossantos_over_time.png]]

Relative frequency:
[[nyt_vossantos_over_time_rel.png]]

** sources
#+BEGIN_SRC sh
  ../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -w -T ../README.org | sort | uniq -c | sort -nr | head -n40
#+END_SRC

| count | source                  |
|-------+-------------------------|
|    68 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]]          |
|    58 | [[https://www.wikidata.org/wiki/Q436386][Rodney Dangerfield]]      |
|    36 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]               |
|    32 | [[https://www.wikidata.org/wiki/Q303][Elvis Presley]]           |
|    31 | [[https://www.wikidata.org/wiki/Q369675][Johnny Appleseed]]        |
|    23 | [[https://www.wikidata.org/wiki/Q5284][Bill Gates]]              |
|    21 | [[https://www.wikidata.org/wiki/Q5593][Pablo Picasso]]           |
|    21 | [[https://www.wikidata.org/wiki/Q5592][Michelangelo]]            |
|    21 | [[https://www.wikidata.org/wiki/Q22686][Donald Trump]]            |
|    21 | [[https://www.wikidata.org/wiki/Q221048][Jackie Robinson]]         |
|    21 | [[https://www.wikidata.org/wiki/Q1744][Madonna]]                 |
|    20 | [[https://www.wikidata.org/wiki/Q223766][P. T. Barnum]]            |
|    20 | [[https://www.wikidata.org/wiki/Q10993][Tiger Woods]]             |
|    18 | [[https://www.wikidata.org/wiki/Q234606][Martha Stewart]]          |
|    16 | [[https://www.wikidata.org/wiki/Q8768][Henry Ford]]              |
|    16 | [[https://www.wikidata.org/wiki/Q692][William Shakespeare]]     |
|    16 | [[https://www.wikidata.org/wiki/Q254][Wolfgang Amadeus Mozart]] |
|    15 | [[https://www.wikidata.org/wiki/Q352][Adolf Hitler]]            |
|    14 | [[https://www.wikidata.org/wiki/Q5443][Greta Garbo]]             |
|    14 | [[https://www.wikidata.org/wiki/Q40531][John Wayne]]              |
|    14 | [[https://www.wikidata.org/wiki/Q30547][Mother Teresa]]           |
|    13 | [[https://www.wikidata.org/wiki/Q517][Napoleon]]                |
|    13 | [[https://www.wikidata.org/wiki/Q193156][Ralph Nader]]             |
|    12 | [[https://www.wikidata.org/wiki/Q762][Leonardo da Vinci]]       |
|    12 | [[https://www.wikidata.org/wiki/Q731168][Cal Ripken]]              |
|    12 | [[https://www.wikidata.org/wiki/Q7243][Leo Tolstoy]]             |
|    12 | [[https://www.wikidata.org/wiki/Q55800][Oprah Winfrey]]           |
|    12 | [[https://www.wikidata.org/wiki/Q41921][Rosa Parks]]              |
|    12 | [[https://www.wikidata.org/wiki/Q242936][Susan Lucci]]             |
|    11 | [[https://www.wikidata.org/wiki/Q8704][Walt Disney]]             |
|    11 | [[https://www.wikidata.org/wiki/Q8021572][Willie Horton]]           |
|    11 | [[https://www.wikidata.org/wiki/Q5598][Rembrandt]]               |
|    10 | [[https://www.wikidata.org/wiki/Q937][Albert Einstein]]         |
|    10 | [[https://www.wikidata.org/wiki/Q8743][Thomas Edison]]           |
|    10 | [[https://www.wikidata.org/wiki/Q79031][Mike Tyson]]              |
|    10 | [[https://www.wikidata.org/wiki/Q214477][Julia Child]]             |
|     9 | [[https://www.wikidata.org/wiki/Q313697][Ross Perot]]              |
|     9 | [[https://www.wikidata.org/wiki/Q201608][Dennis Rodman]]           |
|     8 | [[https://www.wikidata.org/wiki/Q83359][James Dean]]              |
|     8 | [[https://www.wikidata.org/wiki/Q30487][Mikhail Gorbachev]]       |

** categories
*** online
Extract the categories for the articles:
#+BEGIN_SRC sh :results silent
  export PYTHONIOENCODING=utf-8
  for year in $(seq 1987 2007); do
      ./nyt.py --category ../nyt_corpus_${year}.tar.gz \
          | sed -e "s/^nyt_corpus_//" -e "s/\.har\//\//" -e "s/\.xml\t/\t/" \
          | sort >> nyt_categories.tsv
  done
#+END_SRC

Compute frequency distribution over all articles:
#+BEGIN_SRC sh :results silent
  cut -d$'\t' -f2 nyt_categories.tsv | sort -S1G | uniq -c \
     | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
                                            > nyt_categories_distrib.tsv
#+END_SRC

Check the number of and the top categories:
#+BEGIN_SRC sh
  echo articles $(wc -l < nyt_categories.tsv)
  echo categories $(wc -l < nyt_categories_distrib.tsv)
  echo ""
  sort -nrk2 nyt_categories_distrib.tsv | head
#+END_SRC

| articles   | 1854726 |
| categories |    1580 |
|------------+---------|
| Business   |  291982 |
| Sports     |  160888 |
| Opinion    |  134428 |
| U.S.       |   89389 |
| Arts       |   88460 |
| World      |   79786 |
| Style      |   65071 |
| Obituaries |   19430 |
| Magazine   |   11464 |
| Travel     |   10440 |

Collect the categories of the articles
#+BEGIN_SRC sh
  echo "vossantos" $(../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -T ../README.org | wc -l) articles $(wc -l < ../nyt_categories.tsv)
  ../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -T -f ../README.org | join ../nyt_categories.tsv - | sed "s/ /\t/" | awk -F'\t' '{print $2}' \
      | sort | uniq -c \
      | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
      | join -t$'\t' -o1.2,1.1,2.2 - ../nyt_categories_distrib.tsv \
      | sort -nr | head -n20
#+END_SRC

| vossantos |  2646 | category               | articles | 1854726 |
|-----------+-------+------------------------+----------+---------|
|       336 | 12.7% | Sports                 |   160888 |    8.7% |
|       334 | 12.6% | Arts                   |    88460 |    4.8% |
|       290 | 11.0% | New York and Region    |   221897 |   12.0% |
|       237 |  9.0% | Arts; Books            |    35475 |    1.9% |
|       158 |  6.0% | Movies; Arts           |    27759 |    1.5% |
|       109 |  4.1% | Business               |   291982 |   15.7% |
|       102 |  3.9% | Opinion                |   134428 |    7.2% |
|        96 |  3.6% | U.S.                   |    89389 |    4.8% |
|        95 |  3.6% | Magazine               |    11464 |    0.6% |
|        62 |  2.3% | Style                  |    65071 |    3.5% |
|        61 |  2.3% | Arts; Theater          |    13283 |    0.7% |
|        46 |  1.7% | World                  |    79786 |    4.3% |
|        39 |  1.5% | Home and Garden; Style |    13978 |    0.8% |
|        32 |  1.2% | Travel                 |    10440 |    0.6% |
|        31 |  1.2% | Technology; Business   |    23283 |    1.3% |
|        27 |  1.0% |                        |    42157 |    2.3% |
|        25 |  0.9% | Week in Review         |    17107 |    0.9% |
|        25 |  0.9% | Home and Garden        |     5546 |    0.3% |
|        17 |  0.6% | World; Washington      |    24817 |    1.3% |
|        17 |  0.6% | Style; Magazine        |     1519 |    0.1% |
#+TBLFM: $2=($-1/@1$2)*100;%2.1f%%::$5=($-1/@1$5)*100;%2.1f%%

*** desks
Extract the desks for the articles:
#+BEGIN_SRC sh :results silent
  export PYTHONIOENCODING=utf-8
  for year in $(seq 1987 2007); do
      ./nyt.py --desk ../nyt_corpus_${year}.tar.gz \
          | sed -e "s/^nyt_corpus_//" -e "s/\.har\//\//" -e "s/\.xml\t/\t/" \
          | sort >> nyt_desks.tsv
  done
#+END_SRC

Compute frequency distribution over all articles:
#+BEGIN_SRC sh :results silent
  cut -d$'\t' -f2 nyt_desks.tsv | sort -S1G | uniq -c \
     | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
                                            > nyt_desks_distrib.tsv
#+END_SRC

Check the number of and the top categories:
#+BEGIN_SRC sh
  echo articles $(wc -l < nyt_desks.tsv)
  echo categories $(wc -l < nyt_desks_distrib.tsv)
  echo ""
  sort -t$'\t' -nrk2 nyt_desks_distrib.tsv | head
#+END_SRC

| articles                | 1854727 |
| categories              |     398 |
|-------------------------+---------|
| Metropolitan Desk       |  237896 |
| Financial Desk          |  206958 |
| Sports Desk             |  174823 |
| National Desk           |  143489 |
| Editorial Desk          |  131762 |
| Foreign Desk            |  129732 |
| Classified              |  129660 |
| Business/Financial Desk |  112951 |
| Society Desk            |   44032 |
| Cultural Desk           |   40342 |


Collect the desks of the articles
#+BEGIN_SRC sh
  echo "vossantos" $(./org.py -T README.org | wc -l) articles $(wc -l < nyt_desks.tsv)
  ./org.py -T -f README.org | join nyt_desks.tsv - | sed "s/ /\t/" | awk -F'\t' '{print $2}' \
      | sort | uniq -c \
      | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
      | join -t$'\t' -o1.2,1.1,2.2 - nyt_desks_distrib.tsv \
      | sort -nr | head -n20
#+END_SRC

| vossantos | 2764 | desk                    | articles | 1854727 |
|-----------+------+-------------------------+----------+---------|
|       133 | 4.8% | Sports Desk             |   174823 |    9.4% |
|        77 | 2.8% | Cultural Desk           |    40342 |    2.2% |
|        68 | 2.5% | Book Review Desk        |    32737 |    1.8% |
|        61 | 2.2% | National Desk           |   143489 |    7.7% |
|        54 | 2.0% | Financial Desk          |   206958 |   11.2% |
|        51 | 1.8% | Metropolitan Desk       |   237896 |   12.8% |
|        46 | 1.7% | Weekend Desk            |    18814 |    1.0% |
|        38 | 1.4% | Arts & Leisure Desk     |     6742 |    0.4% |
|        35 | 1.3% | Editorial Desk          |   131762 |    7.1% |
|        31 | 1.1% | Foreign Desk            |   129732 |    7.0% |
|        31 | 1.1% | Arts and Leisure Desk   |    27765 |    1.5% |
|        25 | 0.9% | Magazine Desk           |    25433 |    1.4% |
|        25 | 0.9% | Long Island Weekly Desk |    20453 |    1.1% |
|        22 | 0.8% | Living Desk             |     6843 |    0.4% |
|        19 | 0.7% | Home Desk               |     8391 |    0.5% |
|        15 | 0.5% | Week in Review Desk     |    21897 |    1.2% |
|        14 | 0.5% | Style Desk              |    21569 |    1.2% |
|        13 | 0.5% | Styles of The Times     |     2794 |    0.2% |
|        12 | 0.4% |                         |     6288 |    0.3% |
|         9 | 0.3% | Travel Desk             |    23277 |    1.3% |
#+TBLFM: $2=($-1/@1$2)*100;%2.1f%%::$5=($-1/@1$5)*100;%2.1f%%

Note: there are many errors in the specification of the desks ... so
this table should be digested with care.
** authors
Extract the authors for the articles:
#+BEGIN_SRC sh :results silent
  export PYTHONIOENCODING=utf-8
  for year in $(seq 1987 2007); do
      ./nyt.py --author ../nyt_corpus_${year}.tar.gz \
          | sed -e "s/^nyt_corpus_//" -e "s/\.har\//\//" -e "s/\.xml\t/\t/" \
          | sort >> nyt_authors.tsv
  done
#+END_SRC

Compute frequency distribution over all articles:
#+BEGIN_SRC sh :results silent
  cut -d$'\t' -f2 nyt_authors.tsv | sort -S1G | uniq -c \
     | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
                                            > nyt_authors_distrib.tsv
#+END_SRC

Check the number of and the top authors:
#+BEGIN_SRC sh
  echo articles $(wc -l < nyt_authors.tsv)
  echo categories $(wc -l < nyt_authors_distrib.tsv)
  echo ""
  sort -t$'\t' -nrk2 nyt_authors_distrib.tsv | head 
#+END_SRC

| articles            | 1854726 |
| categories          |   30691 |
|---------------------+---------|
|                     |  961052 |
| Elliott, Stuart     |    6296 |
| Holden, Stephen     |    5098 |
| Chass, Murray       |    4544 |
| Pareles, Jon        |    4090 |
| Brozan, Nadine      |    3741 |
| Fabricant, Florence |    3659 |
| Kozinn, Allan       |    3654 |
| Curry, Jack         |    3654 |
| Truscott, Alan      |    3646 |

*requires cleansing!*

Collect the authors of the articles
#+BEGIN_SRC sh
  echo "vossantos" $(../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -T ../README.org | wc -l) articles $(wc -l < ../nyt_authors.tsv)
  ../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -T -f ../README.org | join ../nyt_authors.tsv - | sed "s/ /\t/" | awk -F'\t' '{print $2}' \
      | sort | uniq -c \
      | sed -e "s/^ *//" -e "s/ /\t/" | awk -F'\t' '{print $2"\t"$1}' \
      | join -t$'\t' -o1.2,1.1,2.2 - ../nyt_authors_distrib.tsv \
      | sort -nr | head -n20
#+END_SRC

| vossantos |  2646 | author                | articles | 1854726 |
|-----------+-------+-----------------------+----------+---------|
|       411 | 15.5% |                       |   961052 |   51.8% |
|        30 |  1.1% | Holden, Stephen       |     5098 |    0.3% |
|        29 |  1.1% | Maslin, Janet         |     2874 |    0.2% |
|        26 |  1.0% | Vecsey, George        |     2739 |    0.1% |
|        23 |  0.9% | Sandomir, Richard     |     3140 |    0.2% |
|        22 |  0.8% | Ketcham, Diane        |      717 |    0.0% |
|        20 |  0.8% | Kisselgoff, Anna      |     2661 |    0.1% |
|        19 |  0.7% | Dowd, Maureen         |     1647 |    0.1% |
|        19 |  0.7% | Berkow, Ira           |     1704 |    0.1% |
|        18 |  0.7% | Kimmelman, Michael    |     1515 |    0.1% |
|        17 |  0.6% | Brown, Patricia Leigh |      568 |    0.0% |
|        16 |  0.6% | Pareles, Jon          |     4090 |    0.2% |
|        16 |  0.6% | Chass, Murray         |     4544 |    0.2% |
|        15 |  0.6% | Smith, Roberta        |     2497 |    0.1% |
|        15 |  0.6% | Lipsyte, Robert       |      817 |    0.0% |
|        15 |  0.6% | Grimes, William       |     1368 |    0.1% |
|        15 |  0.6% | Barron, James         |     2188 |    0.1% |
|        15 |  0.6% | Anderson, Dave        |     2735 |    0.1% |
|        14 |  0.5% | Stanley, Alessandra   |     1437 |    0.1% |
|        14 |  0.5% | Haberman, Clyde       |     2492 |    0.1% |
#+TBLFM: $2=($-1/@1$2)*100;%2.1f%%::$5=($-1/@1$5)*100;%2.1f%%

*** Vossantos of the top author
#+BEGIN_SRC sh :results raw
  # extract list of articles
  for article in $(./org.py -T -f README.org | join nyt_authors.tsv - | grep "Maslin, Janet" | cut -d' ' -f1 ); do
    grep "$article" README.org
  done
#+END_SRC

- [[https://www.wikidata.org/wiki/Q94081][Bob Hope]] (1993/04/23/0604282) is loaded with rap-related cameos that work only if you recognize the players (Fab 5 Freddy, Kid Capri, Naughty by Nature and *the Bob Hope of* rap cinema, Ice-T), and have little intrinsic humor of their own.
- [[https://www.wikidata.org/wiki/Q239691][Sandy Dennis]] (1993/09/03/0632371) (Ms. Lewis, who has many similar mannerisms, may be fast becoming *the Sandy Dennis of* her generation.)
- [[https://www.wikidata.org/wiki/Q465417][Dorian Gray]] (1993/12/10/0654992) Also on hand is Aerosmith, *the Dorian Gray of* rock bands, to serve the same purpose Alice Cooper did in the first film.
- [[https://www.wikidata.org/wiki/Q352][Adolf Hitler]] (1994/02/04/0666537) The terrors of the code, as overseen by Joseph Breen (who was nicknamed "*the Hitler of* Hollywood" in some quarters), went beyond the letter of the document and brought about a more generalized moral purge.
- [[https://www.wikidata.org/wiki/Q13685096][Cinderella]] (1994/09/11/0711230) Kevin Smith, *the Cinderella of* this year's Sundance festival, shot this black-and-white movie in the New Jersey store where he himself worked.
- [[https://www.wikidata.org/wiki/Q44176][Hulk Hogan]] (1994/10/25/0720551) Libby's cousin Andrew, an art director who's "so incredibly creative that, as my mother says, no one's holding their breath for grandchildren," opines that "David Mamet is *the Hulk Hogan of* the American theater and that his word processor should be tested for steroids."
- [[https://www.wikidata.org/wiki/Q504455][Andrew Dice Clay]] (1995/09/22/0790066) Mr. Ezsterhas, *the Andrew Dice Clay of* screenwriting, bludgeons the audience with such tirelessly crude thoughts that when a group of chimps get loose in the showgirls' dressing room and all they do is defecate, the film enjoys a rare moment of good taste.
- [[https://www.wikidata.org/wiki/Q11812][Thomas Jefferson]] (1996/01/24/0825044) Last year's overnight sensation, Edward Burns of "The Brothers McMullen," came out of nowhere and now has Jennifer Aniston acting in his new film and Robert Redford, *the Thomas Jefferson of* Sundance, helping as a creative consultant.
- [[https://www.wikidata.org/wiki/Q314805][Elliott Gould]] (1996/03/08/0835139) All coy grins and daffy mugging, Mr. Stiller plays the role as if aspiring to become *the Elliott Gould of* his generation.
- [[https://www.wikidata.org/wiki/Q103767][Charlie Parker]] (1996/08/09/0870295) But for all its admiration, ''Basquiat'' winds up no closer to that assessment than to the critic Robert Hughes's more jaundiced one: ''Far from being *the Charlie Parker of* SoHo (as his promoters claimed), he became its Jessica Savitch.''
- [[https://www.wikidata.org/wiki/Q43423][Aesop]] (1996/08/09/0870300)          Janet Maslin reviews movie Rendezvous in Paris, written and directed by Eric Rohmer; photo (M)                     Eric Rohmer's ''Rendezvous in Paris'' is an oasis of contemplative intelligence in the summer movie season, presenting three graceful and elegant parables with the moral agility that distinguishes Mr. Rohmer as *the Aesop of* amour.
- [[https://www.wikidata.org/wiki/Q450619][Diana Vreeland]] (1997/06/06/0934955) The complex aural and visual style of ''The Pillow Book'' involves rectangular insets that flash back to Sei Shonagon (a kind of Windows 995) and illustrate the imperious little lists that made her sound like *the Diana Vreeland of* 10th-century tastes.
- [[https://www.wikidata.org/wiki/Q107190][Peter Pan]] (1997/08/08/0949060) Mr. Gibson, delivering one of the hearty, dynamic star turns that have made him *the Peter Pan of* the blockbuster set, makes Jerry much more boyishly likable than he deserves to be.
- [[https://www.wikidata.org/wiki/Q8743][Thomas Edison]] (1997/09/19/0958685) Danny DeVito embodies this as a gleeful Sid Hudgens (a character whom Mr. Hanson has called ''*the Thomas Edison of* tabloid journalism''), who is the unscrupulous editor of a publication called Hush-Hush and winds up linked to many of the other characters' nastiest transgressions.
- [[https://www.wikidata.org/wiki/Q40531][John Wayne]] (1997/09/26/0960422) Mr. Hopkins, whose creative collaboration with Bart goes back to ''Legends of the Fall,'' has called him ''*the John Wayne of* bears.''
- [[https://www.wikidata.org/wiki/Q230935][Annie Oakley]] (1997/12/24/0982708) Running nearly as long as ''Pulp Fiction'' even though its ambitions are more familiar and small, ''Jackie Brown'' has the makings of another, chattier ''Get Shorty'' with an added homage to Pam Grier, *the Annie Oakley of* 1970's blaxploitation.
- [[https://www.wikidata.org/wiki/Q122634][Robin Hood]] (1998/04/10/1008616) ''Do not threaten to call the police or have him thrown out,'' went a memorandum issued by another company, when *the Robin Hood of* corporate America went on the road to promote his book abou downsizing.
- [[https://www.wikidata.org/wiki/Q103949][Buster Keaton]] (1998/09/18/1047276) Fortunately, being *the Buster Keaton of* martial arts, he makes a doleful expression and comedic physical grace take the place of small talk.
- [[https://www.wikidata.org/wiki/Q5592][Michelangelo]] (1998/09/25/1049076) She goes to a plastic surgeon (Michael Lerner) who's been dubbed ''*the Michelangelo of* Manhattan'' by Newsweek.
- [[https://www.wikidata.org/wiki/Q313013][Brian Wilson]] (1998/12/31/1073562) The enrapturing beauty and peculiar naivete of ''The Thin Red Line'' heightened the impression of Terrence Malick as *the Brian Wilson of* the film world.
- [[https://www.wikidata.org/wiki/Q1067][Dante Alighieri]] (1999/10/22/1147181) Though his latest film explores one more urban inferno and colorfully reaffirms Mr. Scorsese's role as *the Dante of* the Cinema, creating its air of nocturnal torment took some doing.
- [[https://www.wikidata.org/wiki/Q937][Albert Einstein]] (2000/12/07/1253134) In this much coarser and more violent, action-heavy story, Mr. Deaver presents the villainous Dr. Aaron Matthews, whom a newspaper once called ''*the Einstein of* therapists'' in the days before Hannibal Lecter became his main career influence.
- [[https://www.wikidata.org/wiki/Q504][Émile Zola]] (2001/03/09/1276449) 'Right as Rain'         George P. Pelecanos arrives with the best possible recommendations from other crime writers (e.g., Elmore Leonard likes him), and with jacket copy praising him as ''*the Zola of* Washington, D.C.'' But what he really displays here, in great abundance and to entertaining effect, is a Tarantino touch.
- [[https://www.wikidata.org/wiki/Q1276][Leonard Cohen]] (2002/08/22/1417676) The wry, sexy melancholy of his observations would be seductive enough in its own right -- he is *the Leonard Cohen of* the spy genre -- even without the sharp political acuity that accompanies it.
- [[https://www.wikidata.org/wiki/Q6377737][Kato Kaelin]] (2003/04/07/1478881) Then he has settled in -- as ''a permanent house guest, *the Kato Kaelin of* the wine country,'' in the case of Alan Deutschman -- and tried to figure out what it all means.
- [[https://www.wikidata.org/wiki/Q44176][Hulk Hogan]] (2003/04/14/1480850) Meanwhile, at 5 feet 10 tall and 115 pounds, Andy is *the Hulk Hogan of* this food-phobic crowd.
- [[https://www.wikidata.org/wiki/Q231356][Nora Roberts]] (2003/04/17/1481531) For those who write like clockwork (i.e., Stuart Woods, *the Nora Roberts of* mystery best-sellerdom), a new book every few months is no surprise.
- [[https://www.wikidata.org/wiki/Q2586583][Henny Youngman]] (2004/03/05/1563840) Together Mr. Yetnikoff and Mr. Ritz devise a kind of sitcom snappiness that turns Mr. Yetnikoff into *the Henny Youngman of* CBS.
- [[https://www.wikidata.org/wiki/Q959153][Frank Stallone]] (2004/09/20/1612886) He can read the biblical story of Aaron and imagine ''*the Frank Stallone of* ancient Judaism.''
- [[https://www.wikidata.org/wiki/Q34012][Marlon Brando]] (2005/11/08/1715899) He named his daughter Tuesday, after the actress Tuesday Weld, whom Sam Shepard once called ''*the Marlon Brando of* women.''
- [[https://www.wikidata.org/wiki/Q213626][Jesse James]] (2005/12/09/1723424) How else to explain ''Comma Sense,'' which has a blurb from Ms. Truss and claims that the apostrophe is *the Jesse James of* punctuation marks?
- [[https://www.wikidata.org/wiki/Q2808][Elton John]] (2006/12/11/1811150) Though Foujita had a fashion sense that made him look like *the Elton John of* Montparnasse (he favored earrings, bangs and show-stopping homemade costumes), and though he is seen here hand in hand with a male Japanese friend during their shared tunic-wearing phase, he is viewed by Ms. Birnbaum strictly as a lady-killer.
- [[https://www.wikidata.org/wiki/Q23434][Ernest Hemingway]] (2007/04/30/1844006) Mr. Browne also points out that when he introduced Mr. Zevon to an audience as ''*the Ernest Hemingway of* the twelve-string guitar,'' Mr. Zevon said he was more like Charles Bronson.
** modifiers

#+BEGIN_SRC sh
../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -o -T ../README.org | sort | uniq -c | sort -nr | head -n30
#+END_SRC

| count | modifier         |
|-------+------------------|
|    55 | his day          |
|    33 | his time         |
|    29 | Japan            |
|    16 | tennis           |
|    16 | his generation   |
|    16 | baseball         |
|    15 | China            |
|    13 | her time         |
|    13 | her day          |
|    12 | our time         |
|    11 | the 1990's       |
|    10 | the Zulus        |
|    10 | the 90's         |
|    10 | politics         |
|    10 | hockey           |
|    10 | Brazil           |
|    10 | basketball       |
|    10 | ballet           |
|     9 | jazz             |
|     9 | fashion          |
|     8 | today            |
|     8 | Israel           |
|     8 | his era          |
|     8 | hip-hop          |
|     8 | golf             |
|     8 | dance            |
|     7 | the art world    |
|     7 | the 19th century |
|     7 | Long Island      |
|     7 | Iran             |

*** today
**** "today"
Who are the sources for the modifier "today"?
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* today" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source                 |
|-------+------------------------|
|     1 | [[https://www.wikidata.org/wiki/Q955322][Shoeless Joe Jackson]]   |
|     1 | [[https://www.wikidata.org/wiki/Q5237521][David Merrick]]          |
|     1 | [[https://www.wikidata.org/wiki/Q4982930][Buck Rogers]]            |
|     1 | [[https://www.wikidata.org/wiki/Q4910116][Bill McGowan]]           |
|     1 | [[https://www.wikidata.org/wiki/Q378098][William F. Buckley Jr.]] |
|     1 | [[https://www.wikidata.org/wiki/Q28493][Ralph Fiennes]]          |
|     1 | [[https://www.wikidata.org/wiki/Q231255][Julie London]]           |
|     1 | [[https://www.wikidata.org/wiki/Q1689414][Jimmy Osmond]]           |
|     1 | [[https://www.wikidata.org/wiki/Q1586470][Harry Cohn]]             |

**** "his day" or "his time"
Who are the sources for the modifiers "his day", "his time", and "his generation"?
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* his \(day\|time\|generation\)" | awk -F'\t' '{print $2}' | sort | uniq -c  | sort -nr  | head
#+END_SRC

| count | source                |
|-------+-----------------------|
|     3 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]]        |
|     2 | [[https://www.wikidata.org/wiki/Q79031][Mike Tyson]]            |
|     2 | [[https://www.wikidata.org/wiki/Q508574][Billy Martin]]          |
|     2 | [[https://www.wikidata.org/wiki/Q49214][Dan Quayle]]            |
|     2 | [[https://www.wikidata.org/wiki/Q2685][Arnold Schwarzenegger]] |
|     2 | [[https://www.wikidata.org/wiki/Q234606][Martha Stewart]]        |
|     2 | [[https://www.wikidata.org/wiki/Q22686][Donald Trump]]          |
|     2 | [[https://www.wikidata.org/wiki/Q216896][L. Ron Hubbard]]        |
|     2 | [[https://www.wikidata.org/wiki/Q10993][Tiger Woods]]           |
|     1 | [[https://www.wikidata.org/wiki/Q963129][Lawrence Taylor]]       |

**** "her day"
Who are the sources for the modifier "her day"?
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* her day" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source           |
|-------+------------------|
|     1 | [[https://www.wikidata.org/wiki/Q93187][Hilary Swank]]     |
|     1 | [[https://www.wikidata.org/wiki/Q6294][Hillary Clinton]]  |
|     1 | [[https://www.wikidata.org/wiki/Q4616][Marilyn Monroe]]   |
|     1 | [[https://www.wikidata.org/wiki/Q452206][Judith Krantz]]    |
|     1 | [[https://www.wikidata.org/wiki/Q3838473][Lucia Pamela]]     |
|     1 | [[https://www.wikidata.org/wiki/Q34851][Elizabeth Taylor]] |
|     1 | [[https://www.wikidata.org/wiki/Q285536][Imelda Marcos]]    |
|     1 | [[https://www.wikidata.org/wiki/Q235066][Laurie Anderson]]  |
|     1 | [[https://www.wikidata.org/wiki/Q234163][Nell Gwyn]]        |
|     1 | [[https://www.wikidata.org/wiki/Q225283][Annie Leibovitz]]  |
|     1 | [[https://www.wikidata.org/wiki/Q211082][Tara Reid]]        |
|     1 | [[https://www.wikidata.org/wiki/Q1744][Madonna]]          |
|     1 | [[https://www.wikidata.org/wiki/Q128297][Maria Callas]]     |

*** country
#+BEGIN_SRC sh
  ../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -o -T ../README.org \
      | sort | uniq -c | sort -nr | grep "Japan\|China\|Brazil\|Iran\|Israel\|Mexico\|India\|South Africa\|Spain\|South Korea\|Russia\|Poland\|Pakistan" | head -n13
#+END_SRC

| count | country      |
|-------+--------------|
|    29 | Japan        |
|    15 | China        |
|    10 | Brazil       |
|     8 | Israel       |
|     7 | Iran         |
|     7 | India        |
|     4 | South Africa |
|     4 | Mexico       |
|     3 | Spain        |
|     3 | South Korea  |
|     3 | Russia       |
|     3 | Poland       |
|     3 | Pakistan     |

What are the sources for the modifier ... ?
**** "Japan"
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* Japan" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source            |
|-------+-------------------|
|     5 | [[https://www.wikidata.org/wiki/Q8704][Walt Disney]]       |
|     4 | [[https://www.wikidata.org/wiki/Q5284][Bill Gates]]        |
|     2 | [[https://www.wikidata.org/wiki/Q721948][Nolan Ryan]]        |
|     2 | [[https://www.wikidata.org/wiki/Q40912][Frank Sinatra]]     |
|     1 | [[https://www.wikidata.org/wiki/Q966859][Richard Perle]]     |
|     1 | [[https://www.wikidata.org/wiki/Q8743][Thomas Edison]]     |
|     1 | [[https://www.wikidata.org/wiki/Q79031][Mike Tyson]]        |
|     1 | [[https://www.wikidata.org/wiki/Q762][Leonardo da Vinci]] |
|     1 | [[https://www.wikidata.org/wiki/Q731168][Cal Ripken]]        |
|     1 | [[https://www.wikidata.org/wiki/Q722059][Walter Johnson]]    |
|     1 | [[https://www.wikidata.org/wiki/Q5603][Andy Warhol]]       |
|     1 | [[https://www.wikidata.org/wiki/Q5593][Pablo Picasso]]     |
|     1 | [[https://www.wikidata.org/wiki/Q51495][William Wyler]]     |
|     1 | [[https://www.wikidata.org/wiki/Q435203][Katharine Graham]]  |
|     1 | [[https://www.wikidata.org/wiki/Q41921][Rosa Parks]]        |
|     1 | [[https://www.wikidata.org/wiki/Q39829][Stephen King]]      |
|     1 | [[https://www.wikidata.org/wiki/Q363308][Walker Evans]]      |
|     1 | [[https://www.wikidata.org/wiki/Q35332][Brad Pitt]]         |
|     1 | [[https://www.wikidata.org/wiki/Q307][Galileo Galilei]]   |
|     1 | [[https://www.wikidata.org/wiki/Q305497][Richard Avedon]]    |
|     1 | [[https://www.wikidata.org/wiki/Q270648][P. D. James]]       |
|     1 | [[https://www.wikidata.org/wiki/Q232364][Rem Koolhaas]]      |
|     1 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]         |
|     1 | [[https://www.wikidata.org/wiki/Q19837][Steve Jobs]]        |
|     1 | [[https://www.wikidata.org/wiki/Q193156][Ralph Nader]]       |
|     1 | [[https://www.wikidata.org/wiki/Q1744][Madonna]]           |
|     1 | [[https://www.wikidata.org/wiki/Q160534][Jack Kerouac]]      |

**** "China"
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* China" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source                |
|-------+-----------------------|
|     4 | [[https://www.wikidata.org/wiki/Q231417][Barbara Walters]]       |
|     2 | [[https://www.wikidata.org/wiki/Q355314][Jack Welch]]            |
|     1 | [[https://www.wikidata.org/wiki/Q7742][Louis XIV of France]]   |
|     1 | [[https://www.wikidata.org/wiki/Q60029][Oskar Schindler]]       |
|     1 | [[https://www.wikidata.org/wiki/Q517][Napoleon]]              |
|     1 | [[https://www.wikidata.org/wiki/Q485635][Keith Haring]]          |
|     1 | [[https://www.wikidata.org/wiki/Q41921][Rosa Parks]]            |
|     1 | [[https://www.wikidata.org/wiki/Q30487][Mikhail Gorbachev]]     |
|     1 | [[https://www.wikidata.org/wiki/Q22686][Donald Trump]]          |
|     1 | [[https://www.wikidata.org/wiki/Q213430][Larry King]]            |
|     1 | [[https://www.wikidata.org/wiki/Q193368][Ted Turner]]            |
|     1 | [[https://www.wikidata.org/wiki/Q1744][Madonna]]               |
|     1 | [[https://www.wikidata.org/wiki/Q1126679][The Scarlet Pimpernel]] |

**** "Brazil"
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* Brazil" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source         |
|-------+----------------|
|     1 | [[https://www.wikidata.org/wiki/Q7317][Giuseppe Verdi]] |
|     1 | [[https://www.wikidata.org/wiki/Q69066][Jil Sander]]     |
|     1 | [[https://www.wikidata.org/wiki/Q613136][Walter Reed]]    |
|     1 | [[https://www.wikidata.org/wiki/Q444][Lech Wałęsa]]    |
|     1 | [[https://www.wikidata.org/wiki/Q44301][Jim Morrison]]   |
|     1 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]] |
|     1 | [[https://www.wikidata.org/wiki/Q392][Bob Dylan]]      |
|     1 | [[https://www.wikidata.org/wiki/Q303][Elvis Presley]]  |
|     1 | [[https://www.wikidata.org/wiki/Q191499][Scott Joplin]]   |
|     1 | [[https://www.wikidata.org/wiki/Q190152][Larry Bird]]     |
|     1 | [[https://www.wikidata.org/wiki/Q187447][Pablo Escobar]]  |
|     1 | [[https://www.wikidata.org/wiki/Q16409][Tristan Tzara]]  |
|     1 | [[https://www.wikidata.org/wiki/Q12897][Pelé]]           |

*** sports

#+BEGIN_SRC sh
  ./org.py -T -t README.org \
      | perl -pe "s/.*of\* (.*?[a-zA-Z0-9\.]{2}.*?)['.,?\!:;].*/\1/" | sed -e "s/^['\"]*//" -e "s/['\"]*$//" \
      | sort | uniq -c | sort -nr | grep "baseball\|basketball\|tennis\|golf\|football\|racing\|soccer\|sailing" | head -n8
#+END_SRC

| count | sports     |
|-------+------------|
|    15 | baseball   |
|    12 | tennis     |
|     9 | basketball |
|     7 | football   |
|     6 | racing     |
|     6 | golf       |
|     3 | soccer     |
|     3 | sailing    |

Who are the sources for the modifier ... ?
**** baseball
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* baseball" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source             |
|-------+--------------------|
|     3 | [[https://www.wikidata.org/wiki/Q223766][P. T. Barnum]]       |
|     2 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]          |
|     2 | [[https://www.wikidata.org/wiki/Q190152][Larry Bird]]         |
|     1 | [[https://www.wikidata.org/wiki/Q968798][Paul Brown]]         |
|     1 | [[https://www.wikidata.org/wiki/Q960612][Clifford Irving]]    |
|     1 | [[https://www.wikidata.org/wiki/Q79031][Mike Tyson]]         |
|     1 | [[https://www.wikidata.org/wiki/Q695751][Thomas Dooley]]      |
|     1 | [[https://www.wikidata.org/wiki/Q6101][Marco Polo]]         |
|     1 | [[https://www.wikidata.org/wiki/Q5593][Pablo Picasso]]      |
|     1 | [[https://www.wikidata.org/wiki/Q453251][Horatio Alger]]      |
|     1 | [[https://www.wikidata.org/wiki/Q436386][Rodney Dangerfield]] |
|     1 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]]     |
|     1 | [[https://www.wikidata.org/wiki/Q310394][Alan Alda]]          |
|     1 | [[https://www.wikidata.org/wiki/Q2923786][Brandon Tartikoff]]  |
|     1 | [[https://www.wikidata.org/wiki/Q189081][Howard Hughes]]      |
|     1 | [[https://www.wikidata.org/wiki/Q1330714][Elisha Cook, Jr.]]   |
|     1 | [[https://www.wikidata.org/wiki/Q11812][Thomas Jefferson]]   |

**** tennis
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* tennis" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source          |
|-------+-----------------|
|     2 | [[https://www.wikidata.org/wiki/Q213919][George Foreman]]  |
|     1 | [[https://www.wikidata.org/wiki/Q7803927][Tim McCarver]]    |
|     1 | [[https://www.wikidata.org/wiki/Q739866][Pete Rose]]       |
|     1 | [[https://www.wikidata.org/wiki/Q721948][Nolan Ryan]]      |
|     1 | [[https://www.wikidata.org/wiki/Q5182352][Crash Davis]]     |
|     1 | [[https://www.wikidata.org/wiki/Q51566][Spike Lee]]       |
|     1 | [[https://www.wikidata.org/wiki/Q51516][John Madden]]     |
|     1 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]]  |
|     1 | [[https://www.wikidata.org/wiki/Q40531][John Wayne]]      |
|     1 | [[https://www.wikidata.org/wiki/Q359416][George Hamilton]] |
|     1 | [[https://www.wikidata.org/wiki/Q319099][Michael Dukakis]] |
|     1 | [[https://www.wikidata.org/wiki/Q221048][Jackie Robinson]] |
|     1 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]       |
|     1 | [[https://www.wikidata.org/wiki/Q201608][Dennis Rodman]]   |
|     1 | [[https://www.wikidata.org/wiki/Q1744][Madonna]]         |

**** basketball
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* basketball" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source                  |
|-------+-------------------------|
|     2 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]               |
|     1 | [[https://www.wikidata.org/wiki/Q855][Joseph Stalin]]           |
|     1 | [[https://www.wikidata.org/wiki/Q8027][Martin Luther King, Jr.]] |
|     1 | [[https://www.wikidata.org/wiki/Q51516][John Madden]]             |
|     1 | [[https://www.wikidata.org/wiki/Q4911006][Bill Stern]]              |
|     1 | [[https://www.wikidata.org/wiki/Q39464][Pol Pot]]                 |
|     1 | [[https://www.wikidata.org/wiki/Q369675][Johnny Appleseed]]        |
|     1 | [[https://www.wikidata.org/wiki/Q352][Adolf Hitler]]            |
|     1 | [[https://www.wikidata.org/wiki/Q315487][Bugsy Siegel]]            |
|     1 | [[https://www.wikidata.org/wiki/Q303][Elvis Presley]]           |
|     1 | [[https://www.wikidata.org/wiki/Q271939][Chuck Yeager]]            |
|     1 | [[https://www.wikidata.org/wiki/Q1999216][Norm Crosby]]             |

**** football
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* football" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source          |
|-------+-----------------|
|     1 | [[https://www.wikidata.org/wiki/Q82778][Pliny the Elder]] |
|     1 | [[https://www.wikidata.org/wiki/Q535502][Michael Myers]]   |
|     1 | [[https://www.wikidata.org/wiki/Q4766303][Ann Calvello]]    |
|     1 | [[https://www.wikidata.org/wiki/Q41314][Bobby Fischer]]   |
|     1 | [[https://www.wikidata.org/wiki/Q318503][Mark Cuban]]      |
|     1 | [[https://www.wikidata.org/wiki/Q311885][Patrick Henry]]   |
|     1 | [[https://www.wikidata.org/wiki/Q242936][Susan Lucci]]     |
|     1 | [[https://www.wikidata.org/wiki/Q221048][Jackie Robinson]] |
|     1 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]       |
|     1 | [[https://www.wikidata.org/wiki/Q1341644][Rich Little]]     |

**** racing
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* racing" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source             |
|-------+--------------------|
|     2 | [[https://www.wikidata.org/wiki/Q436386][Rodney Dangerfield]] |
|     1 | [[https://www.wikidata.org/wiki/Q51516][John Madden]]        |
|     1 | [[https://www.wikidata.org/wiki/Q4935855][Bobo Holloman]]      |
|     1 | [[https://www.wikidata.org/wiki/Q357444][Lou Gehrig]]         |
|     1 | [[https://www.wikidata.org/wiki/Q209518][Wayne Gretzky]]      |

**** golf
#+BEGIN_SRC sh
  ./org.py -w -T -t -c README.org | grep "of\* golf" | awk -F'\t' '{print $2}' | sort | uniq -c | sort -nr
#+END_SRC

| count | source          |
|-------+-----------------|
|     2 | [[https://www.wikidata.org/wiki/Q41421][Michael Jordan]]  |
|     2 | [[https://www.wikidata.org/wiki/Q221048][Jackie Robinson]] |
|     1 | [[https://www.wikidata.org/wiki/Q79904][J. D. Salinger]]  |
|     1 | [[https://www.wikidata.org/wiki/Q5950][James Brown]]     |
|     1 | [[https://www.wikidata.org/wiki/Q34012][Marlon Brando]]   |
|     1 | [[https://www.wikidata.org/wiki/Q213812][Babe Ruth]]       |
|     1 | [[https://www.wikidata.org/wiki/Q162629][Simon Cowell]]    |

*** culture
#+BEGIN_SRC sh
  ./org.py -T -t README.org \
      | perl -pe "s/.*of\* (.*?[a-zA-Z0-9\.]{2}.*?)['.,?\!:;].*/\1/" | sed -e "s/^['\"]*//" -e "s/['\"]*$//" \
      | sort | uniq -c | sort -nr | grep "dance\|hip-hop\|jazz\|fashion\|weaving\|ballet\|the art world\|wine\|salsa"   | head -n9
#+END_SRC

| count | modifier          |
|-------+-------------------|
|     8 | jazz              |
|     8 | hip-hop           |
|     8 | fashion           |
|     8 | dance             |
|     7 | the art world     |
|     6 | ballet            |
|     4 | wine              |
|     4 | salsa             |
|     2 | the fashion world |

*** Michael Jordan

#+BEGIN_SRC sh :results raw
  ./org.py -T -l -t README.org | awk -F'\t' '{if ($1 == "Michael Jordan") print $2}' \
      | perl -pe "s/.*of\* (.*?[a-zA-Z0-9\.]{2}.*?)['.,?\!:;)\"].*/\1/" | sed -e "s/^['\"]*//" -e "s/['\"]*$//" -e "s/^/- /" \
      | sort -u
#+END_SRC

the Michael Jordan of
- 12th men
- actresses
- Afghanistan
- Australia
- baseball home where he was raised in Cincinnati
- BMX racing
- boxing
- Brazilian basketball for the past 20 years
- college coaches
- computer games
- cricket
- cyberspace to log a few minutes on a real basketball court
- dance
- diving
- dressage horses
- fast food
- figure skating
- foosball
- game shows
- geopolitics
- geopolitics -- the overwhelmingly dominant system
- golf
- Harlem
- hers
- his day
- his sport
- his team
- his time
- hockey
- hockey by a former Lightning owner
- horse racing
- hunting and fishing
- Indiana
- integrating insurance and health care
-  julienne
- jumpers
- language
- Laser sailing
- late-night TV
- management in Digital
- Meet *the Michael Jordan of* …
- Mexico
- motocross racing in the 1980
- orange juice
- recording
- Sauternes
- snowboarding -- in every interview and article on him
- soccer and Bebeto is the Magic Johnson of soccer
- television puppets
- tennis
- the Buffalo team
- the dirt set
- the Eagles
- the game
- the Hudson
- the National Football League
- the South Korean penal system
- the sport
- the White Sox
- this sport
- women

** favourites
Robert:
- [[https://www.wikidata.org/wiki/Q123867][Marquis de Sade]] (1993/09/26/0636952) When we introduced Word in October 1983, in its first incarnation it was dubbed *the Marquis de Sade of* word processors, which was not altogether unfair.
- [[https://www.wikidata.org/wiki/Q103846][Groucho Marx]] (1987/09/27/0077726) But the tide eventually shifted, partly because the supreme materialist of physics, Richard Feynman of the California Institute of Technology, a man once described as *the Groucho Marx of* physics, turned the quest for nuclear substructure into a cause celebre.

* list of vossantos

#+BEGIN_SRC sh
  ../org.py --ignore-source-ids fictional_humans_in_our_data_set.tsv -g -H -T ../README.org > vossantos.org
#+END_SRC

#+RESULTS:
