#!/usr/bin/python
# -*- coding: utf-8 -*-

#
# Merge a list of Vossantos in an org file into another org file.
#
# Usage:
#
# Author: rja
#
# Changes:
# 2017-05-11 (rja)
# - initial version

from __future__ import print_function
import re
import argparse
import codecs
import sys
from collections import OrderedDict

version = "0.0.1"

# to detect the Vossanto lines
re_line = re.compile(r"^[0-9]+\.[ !]+\+?\[\[.+\]\[(.+)\]\] \(([0-9]{4})/([0-9]{2})/([0-9]{2})/([0-9]+)\)(.+[^+])\+?$")
# to remove markup from the sentences
re_clean = re.compile(r"[*.]")

# reads the file into which the other file shall be merged
# all non-vossanto lines are returned in lines,
# all following (vossanto) lines are indexed in index using
# a key generated by match_line
def read_file(fname):
    lines = []
    index = None
    with codecs.open(fname, "r", "utf-8") as f:
        for line in f:
            # different handling for lines before and after the heading
            if line.startswith("* results"):
                index = dict()
                lines.append(line)
            else:
                if index is not None:
                    # index lines after heading "* results"
                    year, key = match_line(line)
                    if year:
                        if year not in index:
                            index[year] = dict()
                        index[year][key] = line
                else:
                    # store lines before heading "* results"
                    lines.append(line)
    return lines, index

# checks if the line is a Vossanto line and generates a key for the line
def match_line(line):
    match = re_line.match(line.strip())
    if match:
        year = match.group(2)
        aid = match.group(5)
        item = match.group(1)
        sentence = match.group(6)
        key = "|".join([year, aid, item, re_clean.sub('', sentence)[:40]])
        return year, key
    return None, None

# inserts a vossanto line into the index
def insert(index, line, string_new = '> '):
    # extract key for this line
    year, key = match_line(line)
    if not year:
        # print warning only if not a year heading
        if not re.match("^\*{2,3} [0-9]{4}$", line.strip()):
            print("WARN: line did not match", line[:50], file=sys.stderr)
        return
    # add new Vossanto
    if key not in index[year]:
        index[year][key] = string_new + line

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Merge Vossantos in org files.', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('original', type=str, help='original file')
    parser.add_argument('new', type=str, help='new entries')
    parser.add_argument('-s', '--string-new', type=str, help="string to mark new entries", default='> ')
    parser.add_argument('-v', '--version', action="version", version="%(prog)s " + version)

    args = parser.parse_args()

    # read file into which the other file shall be merged
    lines, index = read_file(args.original)

    # read new file and insert Vossantos
    with codecs.open(args.new, "r", "utf-8") as f:
        for line in f:
            insert(index, line, args.string_new)

    # print first (unchanged) part of original file
    for line in lines:
        print(line, end='')

    # print Vossanto lines
    for year in sorted(index):
        print()
        print("**", year)
        for line in sorted(index[year]):
            print(index[year][line], end='')
